resolver 169.254.169.250;

server {
    server_name  "${NGINX_SERVER_NAME}";

    error_log /tmp/error.log warn;

    location ${NGINX_FRONTEND_LOCATION} {
        set $web_frontend ${NGINX_FRONTEND_URL};
        proxy_pass http://$web_frontend;
    }

    location ${NGINX_IMAGE_SERVER_LOCATION} {
        set $images_server ${NGINX_IMAGE_SERVER_URL};
        proxy_pass http://$images_server;
    }

    location ${NGINX_BACKEND_LOCATION} {
        set $backend_server ${NGINX_BACKEND_URL};
        proxy_pass http://$backend_server;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/${NGINX_SERVER_NAME}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/${NGINX_SERVER_NAME}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = ${NGINX_SERVER_NAME}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen       80;
    server_name  "${NGINX_SERVER_NAME}";
    return 404; # managed by Certbot
}
